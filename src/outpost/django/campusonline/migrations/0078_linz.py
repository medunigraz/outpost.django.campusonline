# Generated by Django 2.2.28 on 2023-09-05 08:24

from django.db import migrations
from django.conf import settings


class Migration(migrations.Migration):

    ops = [
        (
            """
            CREATE SCHEMA IF NOT EXISTS linz;
            """,
            """
            DROP SCHEMA IF EXISTS linz;
            """,
        ),
        (
            """
            CREATE FOREIGN TABLE "linz"."stpl" (
                SKZ_UNI varchar,
                SKZ_KEY varchar,
                SKZKEY varchar,
                SKZBEZ varchar,
                VERSION varchar,
                GUELTIG_AB timestamp,
                GUELTIG_BIS timestamp,
                STUDIERBAR_BIS timestamp,
                ABSCHNITT integer,
                SEMESTER integer,
                SWS numeric,
                CREDITS numeric
            )
            SERVER sqlalchemy OPTIONS (
                tablename 'STPL_V',
                schema 'CO_LOC_LINZ',
                db_url '{}'
            );
            """.format(
                settings.MULTICORN.get("campusonline")
            ),
            """
            DROP FOREIGN TABLE IF EXISTS "linz"."stpl";
            """,
        ),
        (
            """
            CREATE FOREIGN TABLE "linz"."lv" (
                NR integer,
                GHK integer,
                LVNR varchar,
                STOFFSEMESTER varchar,
                TITEL varchar,
                UNTERTITEL varchar,
                TITEL_ENGL varchar,
                UNTERTITEL_ENG varchar,
                LV_ART varchar,
                SWS numeric,
                CREDITS numeric
            )
            SERVER sqlalchemy OPTIONS (
                tablename 'LV_V',
                schema 'CO_LOC_LINZ',
                db_url '{}'
            );
            """.format(
                settings.MULTICORN.get("campusonline")
            ),
            """
            DROP FOREIGN TABLE IF EXISTS "linz"."lv";
            """,
        ),
        (
            """
            CREATE FOREIGN TABLE "linz"."pv" (
                NR integer,
                LV_NR integer,
                DATUM_DER_LETZTBEURTEILUNG timestamp,
                NOTE varchar,
                PRF_VERSUCH integer,
                TITEL varchar,
                PRUEFER_VORNAME varchar,
                PRUEFER_NACHNAME varchar,
                GESCHLECHT varchar,
                MATRIKELNUMMER varchar,
                SKZ varchar,
                STUDIENPLANVERSION varchar,
                ANERKENNUNG_JA_NEIN varchar,
                ANERKENNUNGSTITEL_DT varchar,
                ANERKENNUNGSTITEL_ENGL varchar,
                ANERKENNUNGS_ECTS numeric,
                ANERKENNUNGS_GHK integer
            )
            SERVER sqlalchemy OPTIONS (
                tablename 'PV_V',
                schema 'CO_LOC_LINZ',
                db_url '{}'
            );
            """.format(
                settings.MULTICORN.get("campusonline")
            ),
            """
            DROP FOREIGN TABLE IF EXISTS "linz"."pv";
            """,
        ),
        (
            """
            CREATE FOREIGN TABLE "linz"."ghk" (
                NR integer,
                SKZ_UNI varchar,
                SKZ_KEY varchar,
                SKZKEY varchar,
                VERSION varchar,
                ABSCHNITT integer,
                KENNUNG varchar,
                STP_LV_NR integer,
                KURZBEZEICHNUNG varchar,
                TITEL varchar,
                SWS numeric,
                CREDITS numeric
            )
            SERVER sqlalchemy OPTIONS (
                tablename 'STPL_GHK_V',
                schema 'CO_LOC_LINZ',
                db_url '{}'
            );
            """.format(
                settings.MULTICORN.get("campusonline")
            ),
            """
            DROP FOREIGN TABLE IF EXISTS "linz"."ghk";
            """,
        ),
        (
            """
            CREATE FOREIGN TABLE "linz"."fach" (
                SKZ_UNI varchar,
                SKZ_KEY varchar,
                SKZKEY varchar,
                VERSION varchar,
                ABSCHNITT integer,
                KENNUNG varchar,
                NAME varchar,
                NAME_ENGL varchar,
                SWS numeric,
                CREDITS numeric
            )
            SERVER sqlalchemy OPTIONS (
                tablename 'STPL_FACH_V',
                schema 'CO_LOC_LINZ',
                db_url '{}'
            );
            """.format(
                settings.MULTICORN.get("campusonline")
            ),
            """
            DROP FOREIGN TABLE IF EXISTS "linz"."fach";
            """,
        ),
    ]

    dependencies = [
        ("campusonline", "0077_organizationtype_sciencebranch"),
    ]

    operations = [
        migrations.RunSQL(
            [forward for forward, reverse in ops],
            [reverse for forward, reverse in reversed(ops)],
        )
    ]
